
Changes to PolarSSL

0. We added 2 Key Exchange(KE) protocols:  RLWE protocols [include/lattices, LWE.c poly.c mont_mpi.c]
     and curve 25519 (CV25519) [include/nacl , nacl_cv25519XXXX.c].
     We added 4 Signature algorithms: TTS/TTS2 , RAINBOW/RAINBOW2 [include/ttsrainbow, rainbow.c linear31.c]

1.  In ssl_ciphersuite.h/.c
   a.  we add some new identifiers for new authenticate key exchange(AKE) protocols.

        #define TLS_ECDHE_RAINBOW_WITH_AES_128_GCM_SHA256       0xCCFE /* Ours */
        #define TLS_ECDHE_TTS_WITH_AES_128_GCM_SHA256           0xCCFF /* Ours */
        #define TLS_LATTICEE_TTS_WITH_AES_128_GCM_SHA256        0xCC00 /* Ours */
        #define TLS_LATTICEE_RAINBOW_WITH_AES_128_GCM_SHA256    0xCC01 /* Ours */
            ......

    b. we add new functions to recognize AKE protocols.

    A stuct key_agree_t is desinged to funish a AKE.
    It contains dh-like key exchange(KE), signature algorithm(or MAC for psk), PKC for encrypted a session key.
        typedef sturct {
            key_exchange_type_t key_exchange;
            .........
        } key_agree_t;

    We use the following functions to recognize AKE in a higher level of view.
    So we can avoid a detailed  protocol identifier appeared in a huge  conditions  in if statement.

    const key_agree_t *ssl_ciphersuite_recognize( key_exchange_type_t key_exchange );
    pk_type_t ssl_get_ciphersuite_sig_pk_alg( const ssl_ciphersuite_t *info );
    int ssl_ciphersuite_uses_ec( const ssl_ciphersuite_t *info );
    int ssl_ciphersuite_uses_psk( const ssl_ciphersuite_t *info );
    dh_type_t ssl_ciphersuite_dh_type( key_exchange_type_t ssl_type );
    int ssl_ciphersuite_is_dh_ephemeral( key_exchange_type_t ssl_type );
    int ssl_ciphersuite_is_dh( key_exchange_type_t ssl_type );
    int ssl_ciphersuite_is_dh_pkcsign( key_exchange_type_t ssl_type );
    int ssl_ciphersuite_is_dh_psk( key_exchange_type_t ssl_type );


2. Add new interface for DH-like protocols [include/polarssl/dh.h,dh_wrap.h, dhif_XXX.c, dh_wrap.c]
    for DH-like Key Exchange(KE),  we designed a new interfaces. Please refer to DH documents for more details.

3. What is changed in ssl_cli/ssl_srv/ssl_tls [.c]
    a. We replaced original DH-related code with our new interfaces.
    b. We use a high level semantics recognizing functions as the conditions in if statement, so as to hide
        huge  details in cipher suites and make a more clear program logics.

4.  several new apps are added in program/pkey/  for generating key pairs of TTS/RAINBOW. 
      Please refer to HOWTO_RUN for details.

5. We add several test suites corresponding to new DH interface and new PK algos in tests/suites

6. mpi.h/c
    a. modified to add/sub functions for avoiding redundant alloc/free.
    b. add functions for montgomery multiplication.

Bugs fixed:
7. The method of choosing hash functions for signature is changed to pick a stronger hash function.




